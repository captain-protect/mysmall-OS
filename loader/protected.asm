
section _TEXT PUBLIC CLASS=CODE USE16

global _switchProtected
_switchProtected:
		push bp
		mov bp, sp
		mov ebx,	[bp+4]
		mov		ax, cs				; AX = номер сегмента PM_CODE
		mov		ds, ax

; открываем линию А20 (для 32-х битной адресации):
		in		AL,92h
		or		AL,2
		out		92h,AL

; вычисляем линейный адрес метки ENTRY_POINT (точка входа в защищенный режим, 
; находится в PM_CODE сегменте, поэтому от него и пляшем):
		mov		ax, cs
		shl		eax, 4				; EAX = линейный адрес PM_CODE
		add		ax, entry_point 		; EAX = линейный адрес ENTRY_POINT
		mov		[entry], eax			; сохраняем его в переменной ENTRY_OFF  	
; (кстати, подобный "трюк" называется SMC или Self Modyfing Code - самомодифицирующийся код)

; теперь надо вычислить линейный адрес GDT (для загрузки регистра GDTR):
		xor		eax,eax
		mov		ax,cs     			; AX = номер сегмента RM_CODE
		shl		eax,4				; EAX = линейный адрес RM_CODE
		add		ax,GDT				; теперь EAX = линейный адрес GDT

; линейный адрес GDT кладем в заранее подготовленную переменную:
		mov		[GDTR+2], eax

; а подобный трюк назвать SMC уже нельзя, потому как по сути мы модифицируем данные :)

; собственно, загрузка регистра GDTR:
		lgdt		[GDTR]

; запрет маскируемых прерываний:
		cli

; запрет немаскируемых прерываний:
		in		al,70h
		or		al,80h
		out		70h,al

; переключение в защищенный режим:
		mov		eax, CR0
		or		al, 1
		mov		CR0, eax


; загрузить новый селектор в регистр CS
		db		66h				; префикс изменения разрядности операнда
		db		0EAh				; опкод команды JMP FAR
entry:		dd		0				; 32-битное смещение
		dw		00001000b			; селектор первого дескриптора (CODE_descr)

; ТАБЛИЦА ГЛОБАЛЬНЫХ ДЕСКРИПТОРОВ:
GDT:  
; нулевой дескриптор (обязательно должен присутствовать в GDT!):
;                                                                         t
;                                                                         i
;                                                                   B L   m
;                                                                   / V   i
;                                                        DPL        D A   L
;                               |LIMIT  |  |BASE      | P---Type   G O ----   |B|
NULL_descr	db		000h,000h, 00h,00h,00h, 00000000b, 00000000b, 00h
CODE_descr	db		0FFh,0FFh, 00h,00h,00h, 10011010b, 11001111b, 00h
DATA_descr	db		0FFh,0FFh, 00h,00h,00h, 10010010b, 11001111b, 00h
GDT_size	equ 		$-GDT				; размер GDT

GDTR		dw		GDT_size-1			; 16-битный лимит GDT
		dd		0				; здесь будет 32-битный линейный адрес GDT

; ---------------------------------------------------------------------------------------------------------


use32
; СЕГМЕНТ КОДА (для Protected Mode)
; ---------------------------------------------------------------------------------------------------------
entry_point:
; загрузим сегментные регистры селекторами на соответствующие дескрипторы:
                mov	       AX,00010000b                ; селектор на второй дескриптор (DATA_descr)
	        mov	       DS,AX                       ; в DS его
	        mov	       ES,AX                       ; в ES его
	        mov	       FS,AX                       ; в FS его
	        mov	       GS,AX                       ; в GS его
	        mov	       SS,AX                       ; в SS его
	        mov	       ES,AX                       ; в ES его

		mov		ESP, 0x400000
		jmp		EBX
